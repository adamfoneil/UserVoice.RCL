@using UserVoice.RCL.Service.Queries;
@inject UserVoiceDataContext Data

<div class="d-flex flex-row-reverse my-3">
    <Pager @bind-Value="@Query.Page" Change="@(() => Refresh(stateHasChanged: true))"/>
</div>

@foreach (var item in Items)
{
    @if (item.Template is TemplateType.ReleaseNote)
    {
        @ReleaseNoteDisplay(item)
    }

    @if (item.Template is TemplateType.Comment)
    {
        @CommentDisplay(item)
    }
    <hr/>
}

@code {
    ReleaseNoteFeed Query = new() { Page = 0 };
    IEnumerable<ReleaseNoteFeedResult> Items = Enumerable.Empty<ReleaseNoteFeedResult>();

    [Parameter]
    public DateTime? LocalTime { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

    async Task Refresh(bool stateHasChanged = false)
    {
        Items = await Query.ExecuteAsync(Data.GetConnection);
        if (stateHasChanged) StateHasChanged();
    }

    private RenderFragment<ReleaseNoteFeedResult> ReleaseNoteDisplay => item =>
        @<div class="row">
            <div class="col-4">
                <h4>@item.Title</h4>
                <div class="mt-0">
                    <div class="text-muted small">@item.DateCreated.ToString("ddd M/d") | @item.DateCreated.ElapsedRelative(LocalTime ?? DateTime.Now)</div>
                </div>
            </div>
            <div class="col-8">
                @item.ItemBody.ToMarkup()
            </div>
        </div>;

    private RenderFragment<ReleaseNoteFeedResult> CommentDisplay => item =>
        @<div class="row">
            <div class="col-4">
                <h4>
                    <RadzenIcon Icon="@(Data.TypeInfo[ItemType.ReleaseNote].Icon)" Style="@(Data.TypeInfo[ItemType.ReleaseNote].Style)" />
                    <span>@item.Title</span>
                </h4>
                <div class="mt-0">
                    <div class="text-muted small">@item.DateCreated.ToString("ddd M/d") | @item.DateCreated.ElapsedRelative(LocalTime ?? DateTime.Now)</div>
                </div>
            </div>
            <div class="col-8">
                <strong>@item.CreatedBy says:</strong> @item.CommentBody.ToMarkup()
                <hr />
                @item.ItemBody.ToMarkup()                
            </div>
        </div>;
}
